; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32303c_eval\usb_prop.o --asm_dir=.\STM32303C_EVAL\ --list_dir=.\STM32303C_EVAL\ --depend=.\stm32303c_eval\usb_prop.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\\STM32F30x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F30x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM32303C_EVAL -I..\..\..\Libraries\CMSIS\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32L1xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F30X -DUSE_STM32303C_EVAL ..\src\usb_prop.c]
                          THUMB

                          AREA ||i.Virtual_Com_Port_Data_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Data_Setup PROC
;;;254    *******************************************************************************/
;;;255    RESULT Virtual_Com_Port_Data_Setup(uint8_t RequestNo)
000000  4a10              LDR      r2,|L1.68|
;;;256    {
000002  b510              PUSH     {r4,lr}
;;;257      uint8_t    *(*CopyRoutine)(uint16_t);
;;;258    
;;;259      CopyRoutine = NULL;
000004  2100              MOVS     r1,#0
;;;260    
;;;261      if (RequestNo == GET_LINE_CODING)
;;;262      {
;;;263        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000006  6812              LDR      r2,[r2,#0]
000008  2821              CMP      r0,#0x21              ;261
00000a  d002              BEQ      |L1.18|
;;;264        {
;;;265          CopyRoutine = Virtual_Com_Port_GetLineCoding;
;;;266        }
;;;267      }
;;;268      else if (RequestNo == SET_LINE_CODING)
00000c  2820              CMP      r0,#0x20
00000e  d007              BEQ      |L1.32|
000010  e016              B        |L1.64|
                  |L1.18|
000012  7810              LDRB     r0,[r2,#0]            ;263
000014  f000007f          AND      r0,r0,#0x7f           ;263
000018  2821              CMP      r0,#0x21              ;263
00001a  d111              BNE      |L1.64|
00001c  490a              LDR      r1,|L1.72|
00001e  e008              B        |L1.50|
                  |L1.32|
;;;269      {
;;;270        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000020  7810              LDRB     r0,[r2,#0]
000022  f000007f          AND      r0,r0,#0x7f
000026  2821              CMP      r0,#0x21
000028  d100              BNE      |L1.44|
;;;271        {
;;;272          CopyRoutine = Virtual_Com_Port_SetLineCoding;
00002a  4908              LDR      r1,|L1.76|
                  |L1.44|
;;;273        }
;;;274        Request = SET_LINE_CODING;
00002c  4b08              LDR      r3,|L1.80|
00002e  2020              MOVS     r0,#0x20
000030  7018              STRB     r0,[r3,#0]
                  |L1.50|
;;;275      }
;;;276    
;;;277      if (CopyRoutine == NULL)
000032  b129              CBZ      r1,|L1.64|
;;;278      {
;;;279        return USB_UNSUPPORT;
;;;280      }
;;;281    
;;;282      pInformation->Ctrl_Info.CopyData = CopyRoutine;
;;;283      pInformation->Ctrl_Info.Usb_wOffset = 0;
000034  2000              MOVS     r0,#0
000036  6191              STR      r1,[r2,#0x18]
000038  8250              STRH     r0,[r2,#0x12]
;;;284      (*CopyRoutine)(0);
00003a  4788              BLX      r1
;;;285      return USB_SUCCESS;
00003c  2000              MOVS     r0,#0
;;;286    }
00003e  bd10              POP      {r4,pc}
                  |L1.64|
000040  2002              MOVS     r0,#2                 ;279
000042  bd10              POP      {r4,pc}
;;;287    
                          ENDP

                  |L1.68|
                          DCD      pInformation
                  |L1.72|
                          DCD      Virtual_Com_Port_GetLineCoding
                  |L1.76|
                          DCD      Virtual_Com_Port_SetLineCoding
                  |L1.80|
                          DCD      ||.data||

                          AREA ||i.Virtual_Com_Port_GetConfigDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetConfigDescriptor PROC
;;;331    *******************************************************************************/
;;;332    uint8_t *Virtual_Com_Port_GetConfigDescriptor(uint16_t Length)
000000  4901              LDR      r1,|L2.8|
;;;333    {
;;;334      return Standard_GetDescriptorData(Length, &Config_Descriptor);
000002  f7ffbffe          B.W      Standard_GetDescriptorData
;;;335    }
;;;336    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ||.data||+0x14

                          AREA ||i.Virtual_Com_Port_GetDeviceDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetDeviceDescriptor PROC
;;;319    *******************************************************************************/
;;;320    uint8_t *Virtual_Com_Port_GetDeviceDescriptor(uint16_t Length)
000000  4901              LDR      r1,|L3.8|
;;;321    {
;;;322      return Standard_GetDescriptorData(Length, &Device_Descriptor);
000002  f7ffbffe          B.W      Standard_GetDescriptorData
;;;323    }
;;;324    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ||.data||+0xc

                          AREA ||i.Virtual_Com_Port_GetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetLineCoding PROC
;;;385    *******************************************************************************/
;;;386    uint8_t *Virtual_Com_Port_GetLineCoding(uint16_t Length)
000000  b108              CBZ      r0,|L4.6|
;;;387    {
;;;388      if (Length == 0)
;;;389      {
;;;390        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
;;;391        return NULL;
;;;392      }
;;;393      return(uint8_t *)&linecoding;
000002  4804              LDR      r0,|L4.20|
;;;394    }
000004  4770              BX       lr
                  |L4.6|
000006  4904              LDR      r1,|L4.24|
000008  2008              MOVS     r0,#8                 ;390
00000a  6809              LDR      r1,[r1,#0]            ;390  ; pInformation
00000c  8208              STRH     r0,[r1,#0x10]         ;390
00000e  2000              MOVS     r0,#0                 ;391
000010  4770              BX       lr
;;;395    
                          ENDP

000012  0000              DCW      0x0000
                  |L4.20|
                          DCD      ||.data||+0x4
                  |L4.24|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_GetStringDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetStringDescriptor PROC
;;;343    *******************************************************************************/
;;;344    uint8_t *Virtual_Com_Port_GetStringDescriptor(uint16_t Length)
000000  4905              LDR      r1,|L5.24|
;;;345    {
;;;346      uint8_t wValue0 = pInformation->USBwValue0;
000002  6809              LDR      r1,[r1,#0]  ; pInformation
000004  78c9              LDRB     r1,[r1,#3]
;;;347      if (wValue0 > 4)
000006  2904              CMP      r1,#4
000008  d901              BLS      |L5.14|
;;;348      {
;;;349        return NULL;
00000a  2000              MOVS     r0,#0
;;;350      }
;;;351      else
;;;352      {
;;;353        return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
;;;354      }
;;;355    }
00000c  4770              BX       lr
                  |L5.14|
00000e  4a03              LDR      r2,|L5.28|
000010  eb0201c1          ADD      r1,r2,r1,LSL #3       ;353
000014  f7ffbffe          B.W      Standard_GetDescriptorData
;;;356    
                          ENDP

                  |L5.24|
                          DCD      pInformation
                  |L5.28|
                          DCD      ||.data||+0x4c

                          AREA ||i.Virtual_Com_Port_Get_Interface_Setting||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Get_Interface_Setting PROC
;;;365    *******************************************************************************/
;;;366    RESULT Virtual_Com_Port_Get_Interface_Setting(uint8_t Interface, uint8_t AlternateSetting)
000000  b909              CBNZ     r1,|L6.6|
;;;367    {
;;;368      if (AlternateSetting > 0)
;;;369      {
;;;370        return USB_UNSUPPORT;
;;;371      }
;;;372      else if (Interface > 1)
000002  2801              CMP      r0,#1
000004  d901              BLS      |L6.10|
                  |L6.6|
;;;373      {
;;;374        return USB_UNSUPPORT;
000006  2002              MOVS     r0,#2
;;;375      }
;;;376      return USB_SUCCESS;
;;;377    }
000008  4770              BX       lr
                  |L6.10|
00000a  2000              MOVS     r0,#0                 ;376
00000c  4770              BX       lr
;;;378    
                          ENDP


                          AREA ||i.Virtual_Com_Port_NoData_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_NoData_Setup PROC
;;;294    *******************************************************************************/
;;;295    RESULT Virtual_Com_Port_NoData_Setup(uint8_t RequestNo)
000000  4907              LDR      r1,|L7.32|
;;;296    {
;;;297    
;;;298      if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000002  6809              LDR      r1,[r1,#0]  ; pInformation
000004  7809              LDRB     r1,[r1,#0]
000006  f001017f          AND      r1,r1,#0x7f
00000a  2921              CMP      r1,#0x21
00000c  d103              BNE      |L7.22|
;;;299      {
;;;300        if (RequestNo == SET_COMM_FEATURE)
00000e  2802              CMP      r0,#2
000010  d003              BEQ      |L7.26|
;;;301        {
;;;302          return USB_SUCCESS;
;;;303        }
;;;304        else if (RequestNo == SET_CONTROL_LINE_STATE)
000012  2822              CMP      r0,#0x22
000014  d001              BEQ      |L7.26|
                  |L7.22|
;;;305        {
;;;306          return USB_SUCCESS;
;;;307        }
;;;308      }
;;;309    
;;;310      return USB_UNSUPPORT;
000016  2002              MOVS     r0,#2
;;;311    }
000018  4770              BX       lr
                  |L7.26|
00001a  2000              MOVS     r0,#0                 ;306
00001c  4770              BX       lr
;;;312    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_Reset||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Reset PROC
;;;145    *******************************************************************************/
;;;146    void Virtual_Com_Port_Reset(void)
000000  4833              LDR      r0,|L8.208|
;;;147    {
000002  b510              PUSH     {r4,lr}
;;;148      /* Set Virtual_Com_Port DEVICE as not configured */
;;;149      pInformation->Current_Configuration = 0;
000004  6800              LDR      r0,[r0,#0]  ; pInformation
;;;150    
;;;151      /* Current Feature initialization */
;;;152      pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
000006  4a33              LDR      r2,|L8.212|
000008  2100              MOVS     r1,#0                 ;149
00000a  7281              STRB     r1,[r0,#0xa]          ;149
00000c  79d2              LDRB     r2,[r2,#7]  ; Virtual_Com_Port_ConfigDescriptor
00000e  7242              STRB     r2,[r0,#9]
;;;153    
;;;154      /* Set Virtual_Com_Port DEVICE with the default Interface*/
;;;155      pInformation->Current_Interface = 0;
000010  72c1              STRB     r1,[r0,#0xb]
;;;156    
;;;157      SetBTABLE(BTABLE_ADDRESS);
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       SetBTABLE
;;;158    
;;;159      /* Initialize Endpoint 0 */
;;;160      SetEPType(ENDP0, EP_CONTROL);
000018  f44f7100          MOV      r1,#0x200
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       SetEPType
;;;161      SetEPTxStatus(ENDP0, EP_TX_STALL);
000022  2110              MOVS     r1,#0x10
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       SetEPTxStatus
;;;162      SetEPRxAddr(ENDP0, ENDP0_RXADDR);
00002a  2140              MOVS     r1,#0x40
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       SetEPRxAddr
;;;163      SetEPTxAddr(ENDP0, ENDP0_TXADDR);
000032  2180              MOVS     r1,#0x80
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       SetEPTxAddr
;;;164      Clear_Status_Out(ENDP0);
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       Clear_Status_Out
;;;165      SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
000040  4825              LDR      r0,|L8.216|
000042  f890102c          LDRB     r1,[r0,#0x2c]  ; Device_Property
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       SetEPRxCount
;;;166      SetEPRxValid(ENDP0);
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       SetEPRxValid
;;;167    
;;;168      /* Initialize Endpoint 1 */
;;;169      SetEPType(ENDP1, EP_BULK);
000052  2100              MOVS     r1,#0
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       SetEPType
;;;170      SetEPTxAddr(ENDP1, ENDP1_TXADDR);
00005a  21c0              MOVS     r1,#0xc0
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       SetEPTxAddr
;;;171      SetEPTxStatus(ENDP1, EP_TX_NAK);
000062  2120              MOVS     r1,#0x20
000064  2001              MOVS     r0,#1
000066  f7fffffe          BL       SetEPTxStatus
;;;172      SetEPRxStatus(ENDP1, EP_RX_DIS);
00006a  2100              MOVS     r1,#0
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       SetEPRxStatus
;;;173    
;;;174      /* Initialize Endpoint 2 */
;;;175      SetEPType(ENDP2, EP_INTERRUPT);
000072  f44f61c0          MOV      r1,#0x600
000076  2002              MOVS     r0,#2
000078  f7fffffe          BL       SetEPType
;;;176      SetEPTxAddr(ENDP2, ENDP2_TXADDR);
00007c  f44f7180          MOV      r1,#0x100
000080  2002              MOVS     r0,#2
000082  f7fffffe          BL       SetEPTxAddr
;;;177      SetEPRxStatus(ENDP2, EP_RX_DIS);
000086  2100              MOVS     r1,#0
000088  2002              MOVS     r0,#2
00008a  f7fffffe          BL       SetEPRxStatus
;;;178      SetEPTxStatus(ENDP2, EP_TX_NAK);
00008e  2120              MOVS     r1,#0x20
000090  2002              MOVS     r0,#2
000092  f7fffffe          BL       SetEPTxStatus
;;;179    
;;;180      /* Initialize Endpoint 3 */
;;;181      SetEPType(ENDP3, EP_BULK);
000096  2100              MOVS     r1,#0
000098  2003              MOVS     r0,#3
00009a  f7fffffe          BL       SetEPType
;;;182      SetEPRxAddr(ENDP3, ENDP3_RXADDR);
00009e  f44f7188          MOV      r1,#0x110
0000a2  2003              MOVS     r0,#3
0000a4  f7fffffe          BL       SetEPRxAddr
;;;183      SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
0000a8  2140              MOVS     r1,#0x40
0000aa  2003              MOVS     r0,#3
0000ac  f7fffffe          BL       SetEPRxCount
;;;184      SetEPRxStatus(ENDP3, EP_RX_VALID);
0000b0  f44f5140          MOV      r1,#0x3000
0000b4  2003              MOVS     r0,#3
0000b6  f7fffffe          BL       SetEPRxStatus
;;;185      SetEPTxStatus(ENDP3, EP_TX_DIS);
0000ba  2100              MOVS     r1,#0
0000bc  2003              MOVS     r0,#3
0000be  f7fffffe          BL       SetEPTxStatus
;;;186    
;;;187      /* Set this device to response on default address */
;;;188      SetDeviceAddress(0);
0000c2  2000              MOVS     r0,#0
0000c4  f7fffffe          BL       SetDeviceAddress
;;;189      
;;;190      bDeviceState = ATTACHED;
0000c8  4904              LDR      r1,|L8.220|
0000ca  2001              MOVS     r0,#1
0000cc  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;191    }
0000ce  bd10              POP      {r4,pc}
;;;192    
                          ENDP

                  |L8.208|
                          DCD      pInformation
                  |L8.212|
                          DCD      Virtual_Com_Port_ConfigDescriptor
                  |L8.216|
                          DCD      ||.data||+0x1c
                  |L8.220|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetConfiguration||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetConfiguration PROC
;;;199    *******************************************************************************/
;;;200    void Virtual_Com_Port_SetConfiguration(void)
000000  4803              LDR      r0,|L9.16|
;;;201    {
;;;202      DEVICE_INFO *pInfo = &Device_Info;
;;;203    
;;;204      if (pInfo->Current_Configuration != 0)
000002  7a80              LDRB     r0,[r0,#0xa]
000004  2800              CMP      r0,#0                 ;201
000006  d002              BEQ      |L9.14|
;;;205      {
;;;206        /* Device configured */
;;;207        bDeviceState = CONFIGURED;
000008  4902              LDR      r1,|L9.20|
00000a  2005              MOVS     r0,#5
00000c  6008              STR      r0,[r1,#0]  ; bDeviceState
                  |L9.14|
;;;208      }
;;;209    }
00000e  4770              BX       lr
;;;210    
                          ENDP

                  |L9.16|
                          DCD      Device_Info
                  |L9.20|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetDeviceAddress||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetDeviceAddress PROC
;;;217    *******************************************************************************/
;;;218    void Virtual_Com_Port_SetDeviceAddress (void)
000000  4901              LDR      r1,|L10.8|
;;;219    {
;;;220      bDeviceState = ADDRESSED;
000002  2004              MOVS     r0,#4
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;221    }
000006  4770              BX       lr
;;;222    
                          ENDP

                  |L10.8|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetLineCoding PROC
;;;402    *******************************************************************************/
;;;403    uint8_t *Virtual_Com_Port_SetLineCoding(uint16_t Length)
000000  b108              CBZ      r0,|L11.6|
;;;404    {
;;;405      if (Length == 0)
;;;406      {
;;;407        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
;;;408        return NULL;
;;;409      }
;;;410      return(uint8_t *)&linecoding;
000002  4804              LDR      r0,|L11.20|
;;;411    }
000004  4770              BX       lr
                  |L11.6|
000006  4904              LDR      r1,|L11.24|
000008  2008              MOVS     r0,#8                 ;407
00000a  6809              LDR      r1,[r1,#0]            ;407  ; pInformation
00000c  8208              STRH     r0,[r1,#0x10]         ;407
00000e  2000              MOVS     r0,#0                 ;408
000010  4770              BX       lr
;;;412    
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      ||.data||+0x4
                  |L11.24|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_Status_In||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Status_In PROC
;;;229    *******************************************************************************/
;;;230    void Virtual_Com_Port_Status_In(void)
000000  4803              LDR      r0,|L12.16|
;;;231    {
;;;232      if (Request == SET_LINE_CODING)
000002  7801              LDRB     r1,[r0,#0]  ; Request
000004  2920              CMP      r1,#0x20
000006  d101              BNE      |L12.12|
;;;233      {
;;;234        Request = 0;
000008  2100              MOVS     r1,#0
00000a  7001              STRB     r1,[r0,#0]
                  |L12.12|
;;;235      }
;;;236    }
00000c  4770              BX       lr
;;;237    
                          ENDP

00000e  0000              DCW      0x0000
                  |L12.16|
                          DCD      ||.data||

                          AREA ||i.Virtual_Com_Port_Status_Out||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Status_Out PROC
;;;244    *******************************************************************************/
;;;245    void Virtual_Com_Port_Status_Out(void)
000000  4770              BX       lr
;;;246    {}
;;;247    
                          ENDP


                          AREA ||i.Virtual_Com_Port_init||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_init PROC
;;;120    *******************************************************************************/
;;;121    void Virtual_Com_Port_init(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
;;;123    
;;;124      /* Update the serial number string descriptor with the data from the unique
;;;125      ID*/
;;;126      Get_SerialNum();
000002  f7fffffe          BL       Get_SerialNum
;;;127    
;;;128      pInformation->Current_Configuration = 0;
000006  4805              LDR      r0,|L14.28|
000008  2400              MOVS     r4,#0
00000a  6800              LDR      r0,[r0,#0]  ; pInformation
00000c  7284              STRB     r4,[r0,#0xa]
;;;129    
;;;130      /* Connect the device */
;;;131      PowerOn();
00000e  f7fffffe          BL       PowerOn
;;;132    
;;;133      /* Perform basic device initialization operations */
;;;134      USB_SIL_Init();
000012  f7fffffe          BL       USB_SIL_Init
;;;135    
;;;136      bDeviceState = UNCONNECTED;
000016  4802              LDR      r0,|L14.32|
000018  6004              STR      r4,[r0,#0]  ; bDeviceState
;;;137    }
00001a  bd10              POP      {r4,pc}
;;;138    
                          ENDP

                  |L14.28|
                          DCD      pInformation
                  |L14.32|
                          DCD      bDeviceState

                          AREA ||.data||, DATA, ALIGN=2

                  Request
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  linecoding
                          DCD      0x0001c200
000008  00000800          DCB      0x00,0x00,0x08,0x00
                  Device_Descriptor
                          DCD      Virtual_Com_Port_DeviceDescriptor
000010  0012              DCW      0x0012
000012  0000              DCB      0x00,0x00
                  Config_Descriptor
                          DCD      Virtual_Com_Port_ConfigDescriptor
000018  0043              DCW      0x0043
00001a  0000              DCB      0x00,0x00
                  Device_Property
                          DCD      Virtual_Com_Port_init
                          DCD      Virtual_Com_Port_Reset
                          DCD      Virtual_Com_Port_Status_In
                          DCD      Virtual_Com_Port_Status_Out
                          DCD      Virtual_Com_Port_Data_Setup
                          DCD      Virtual_Com_Port_NoData_Setup
                          DCD      Virtual_Com_Port_Get_Interface_Setting
                          DCD      Virtual_Com_Port_GetDeviceDescriptor
                          DCD      Virtual_Com_Port_GetConfigDescriptor
                          DCD      Virtual_Com_Port_GetStringDescriptor
                          DCD      0x00000000
000048  40000000          DCB      0x40,0x00,0x00,0x00
                  String_Descriptor
                          DCD      Virtual_Com_Port_StringLangID
000050  0004              DCW      0x0004
000052  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringVendor
000058  0026              DCW      0x0026
00005a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringProduct
000060  0032              DCW      0x0032
000062  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringSerial
000068  001a              DCW      0x001a
00006a  0000              DCB      0x00,0x00

                          AREA ||area_number.18||, DATA, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.data||
                  Device_Table
000000  0401              DCB      0x04,0x01

                          AREA ||area_number.19||, DATA, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.data||
                  User_Standard_Requests
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetConfiguration
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetDeviceAddress

;*** Start embedded assembler ***

#line 1 "..\\src\\usb_prop.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_prop_c_Request____REV16|
#line 114 "..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usb_prop_c_Request____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_prop_c_Request____REVSH|
#line 128
|__asm___10_usb_prop_c_Request____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
